{"ast":null,"code":"import _classCallCheck from\"/Users/lucaspao/Documents/Coding/lucaspingpao.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/lucaspao/Documents/Coding/lucaspingpao.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/lucaspao/Documents/Coding/lucaspingpao.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/lucaspao/Documents/Coding/lucaspingpao.github.io/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';import'../../styles/App.css';var PolySymph=/*#__PURE__*/function(_React$Component){_inherits(PolySymph,_React$Component);var _super=_createSuper(PolySymph);function PolySymph(props){var _this;_classCallCheck(this,PolySymph);_this=_super.call(this,props);_this.state={};return _this;}_createClass(PolySymph,[{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(\"div\",{className:\"projectBody\"},/*#__PURE__*/React.createElement(\"h2\",null,\"Polysymph Synthesizer\"),/*#__PURE__*/React.createElement(\"p\",null,\"In the fall semester of 2020, I took a class called \\\"How Music Works: Engineering the Acoustical World\\\", in which we applied concepts from mechnical and eletrical engineering to explore and create our own musical systems. For my final project in this class, I developed a web app called \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://polysymph.herokuapp.com\",target:\"_blank\",style:{color:\"green\"}},\"PolySymph\"),\" (a wordplay on \\\"Polyphonic Synthesizer\\\" + \\\"Symphony\\\"), a music composition app that allows the user to experiment with the fundamental components of a band in a uniquely displayed format.\"),/*#__PURE__*/React.createElement(\"p\",null,\"I first synthesized original sounds on the backend in Python by superpositioning sinewave signals according to fixed (and random!) sets of Fourier coefficients. I then mapped these sounds to the frontend user interface of the app using the micro web framework Flask. Find the complete web app \",/*#__PURE__*/React.createElement(\"a\",{href:\"https://polysymph.herokuapp.com\",target:\"_blank\",style:{color:\"green\"}},\"here\"),\", or watch the video below to find out more about how I created the backend synthesizer that supports the audio signals in the app!\"),/*#__PURE__*/React.createElement(\"br\",null),/*#__PURE__*/React.createElement(\"iframe\",{width:\"560\",height:\"315\",src:\"https://www.youtube.com/embed/Lcgwm4ci7l4\",frameborder:\"0\",allow:\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",allowfullscreen:true}));}}]);return PolySymph;}(React.Component);export default PolySymph;","map":{"version":3,"sources":["/Users/lucaspao/Documents/Coding/lucaspingpao.github.io/src/pages/Coding/PolySymph.js"],"names":["React","PolySymph","props","state","color","Component"],"mappings":"wqBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAO,sBAAP,C,GAEMC,CAAAA,S,kHACF,mBAAYC,KAAZ,CAAmB,2CACf,uBAAMA,KAAN,EACA,MAAKC,KAAL,CAAa,EAAb,CAFe,aAGlB,C,6DAEQ,CACL,mBACI,2BAAK,SAAS,CAAC,aAAf,eACI,sDADJ,cAGI,8UAEqE,yBAAG,IAAI,CAAC,iCAAR,CAA0C,MAAM,CAAC,QAAjD,CAA0D,KAAK,CAAE,CAACC,KAAK,CAAE,OAAR,CAAjE,cAFrE,oMAHJ,cASI,kVAG8B,yBAAG,IAAI,CAAC,iCAAR,CAA0C,MAAM,CAAC,QAAjD,CAA0D,KAAK,CAAE,CAACA,KAAK,CAAE,OAAR,CAAjE,SAH9B,uIATJ,cAgBI,8BAhBJ,cAkBI,8BAAQ,KAAK,CAAC,KAAd,CAAoB,MAAM,CAAC,KAA3B,CAAiC,GAAG,CAAC,2CAArC,CAAiF,WAAW,CAAC,GAA7F,CAAiG,KAAK,CAAC,0FAAvG,CAAkM,eAAe,KAAjN,EAlBJ,CADJ,CAwBH,C,uBA/BmBJ,KAAK,CAACK,S,EAkC9B,cAAeJ,CAAAA,SAAf","sourcesContent":["import React from 'react';\nimport '../../styles/App.css';\n\nclass PolySymph extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n\n    render() {\n        return (\n            <div className=\"projectBody\">\n                <h2>Polysymph Synthesizer</h2>\n\n                <p>\n                    In the fall semester of 2020, I took a class called \"How Music Works: Engineering the Acoustical World\", in which we applied concepts from mechnical and eletrical engineering to explore and create our own musical systems.\n                    For my final project in this class, I developed a web app called <a href=\"https://polysymph.herokuapp.com\" target=\"_blank\" style={{color: \"green\"}}>PolySymph</a> (a wordplay on \"Polyphonic Synthesizer\" + \"Symphony\"),\n                    a music composition app that allows the user to experiment with the fundamental components of a band in a uniquely displayed format.\n                </p>\n\n                <p>\n                    I first synthesized original sounds on the backend in Python by superpositioning sinewave signals according to fixed (and random!) sets of Fourier coefficients.\n                    I then mapped these sounds to the frontend user interface of the app using the micro web framework Flask.\n                    Find the complete web app <a href=\"https://polysymph.herokuapp.com\" target=\"_blank\" style={{color: \"green\"}}>here</a>, or\n                    watch the video below to find out more about how I created the backend synthesizer that supports the audio signals in the app!\n                </p>\n\n                <br/>\n\n                <iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/Lcgwm4ci7l4\" frameborder=\"0\" allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\" allowfullscreen></iframe>\n                \n            </div>\n            \n        );\n    }\n}\n\nexport default PolySymph;"]},"metadata":{},"sourceType":"module"}